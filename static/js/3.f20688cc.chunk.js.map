{"version":3,"sources":["components/Dialogs/Chats/Chats.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/ChatMessage/ChatMessage.module.css","components/Dialogs/Chats/Chats.jsx","components/Dialogs/ChatMessage/ChatMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["module","exports","Chats","props","to","id","className","s","chat","chatPhoto","src","avatar","circleAvatar","getMessage","messageFrom","name","lastMessage","ChatMessage","chatMessages","senderInfo","alt","message","messageTime","Dialogs","state","dialogsPage","chatElements","chatData","map","messagesElements","messagesData","dialogWrapper","selectChat","messages","messagesContainer","chatBlock","onChange","e","text","target","value","updateMessageText","onKeyPress","event","key","handleKeyPress","placeholder","chatInput","type","newMessage","compose","connect","dispatch","addMessageActionCreator","action","updateMessageTextActionCreator","withAuthRedirect"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,aAAe,4BAA4B,YAAc,2BAA2B,WAAa,4B,oBCA9ID,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,WAAa,4BAA4B,SAAW,0BAA0B,kBAAoB,mCAAmC,UAAY,2BAA2B,UAAY,6B,oBCAzPD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,aAAe,kCAAkC,WAAa,gCAAgC,aAAe,kCAAkC,YAAc,mC,6GCoBvMC,EAjBD,SAACC,GACX,OACI,cAAC,IAAD,CAASC,GAAE,mBAAcD,EAAME,IAA/B,SACI,sBAAKC,UAAWC,IAAEC,KAAlB,UACI,qBAAKF,UAAWC,IAAEE,UAAlB,SACI,qBAAKC,IAAKP,EAAMQ,OAAQL,UAAWC,IAAEK,iBAEzC,sBAAKN,UAAWC,IAAEM,WAAlB,UACI,qBAAKP,UAAWC,IAAEO,YAAlB,SAAgCX,EAAMY,OACtC,qBAAKT,UAAWC,IAAES,YAAlB,SAAgCb,EAAMa,uB,oCCI3CC,EAfK,SAACd,GACjB,OACI,sBAAKG,UAAWC,IAAEW,aAAlB,UACI,sBAAKZ,UAAWC,IAAEY,WAAlB,UACI,8BACI,qBAAKC,IAAI,aAAaV,IAAKP,EAAMQ,OAAQL,UAAWC,IAAEK,iBAE1D,qBAAKN,UAAWC,IAAEc,QAAlB,SAA4BlB,EAAMkB,aAEtC,qBAAKf,UAAWC,IAAEe,YAAlB,SAAgCnB,EAAMmB,kBCkCnCC,G,KAvCC,SAACpB,GACb,IAAIqB,EAAQrB,EAAMsB,YAadC,EACAF,EAAMG,SAASC,KAAI,SAAApB,GAAI,OAAI,cAAC,EAAD,CAAOH,GAAIG,EAAKH,GAAIM,OAAQH,EAAKG,OAAQI,KAAMP,EAAKO,KAAMC,YAAaR,EAAKQ,iBACvGa,EACAL,EAAMM,aAAaF,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,EAAQA,QAASV,OAAQU,EAAQV,OAAQW,YAAaD,EAAQC,iBAG1H,OACI,sBAAKhB,UAAWC,IAAEwB,cAAlB,UACI,qBAAKzB,UAAWC,IAAEyB,WAAlB,SACKN,IAEL,qBAAKpB,UAAWC,IAAE0B,SAAlB,SACI,sBAAK3B,UAAWC,IAAE2B,kBAAlB,UACKL,EACD,qBAAKvB,UAAWC,IAAE4B,UAAlB,SACI,uBAAOC,SApBD,SAACC,GACvB,IAAIC,EAAOD,EAAEE,OAAOC,MACpBrC,EAAMsC,kBAAkBH,IAkB4BI,WA1BjC,SAACC,GACF,UAAdA,EAAMC,KACNzC,EAAM0C,kBAwBsEC,YAAY,0BAA0BxC,UAAWC,IAAEwC,UAAWC,KAAK,OAAOR,MAAOhB,EAAMyB,WAAW5B,sBCZ3K6B,sBAAQC,aAhBC,SAAC3B,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAAC2B,GACxB,MAAO,CACHP,eAAgB,WAAQO,EAASC,gBACjCZ,kBAAmB,SAACH,GAChB,IAAIgB,EAASC,YAA+BjB,GAC5Cc,EAASE,QAKgDE,IAAtDN,CAAwE3B","file":"static/js/3.f20688cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chats_chat__45oD2\",\"circleAvatar\":\"Chats_circleAvatar__3H3af\",\"lastMessage\":\"Chats_lastMessage__1mH5A\",\"getMessage\":\"Chats_getMessage__3zovg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogWrapper\":\"Dialogs_dialogWrapper__xZVtd\",\"selectChat\":\"Dialogs_selectChat__2Nas3\",\"messages\":\"Dialogs_messages__1sUym\",\"messagesContainer\":\"Dialogs_messagesContainer__2cVY9\",\"chatBlock\":\"Dialogs_chatBlock__12V8N\",\"chatInput\":\"Dialogs_chatInput__8VwTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"ChatMessage_message__1se0V\",\"chatMessages\":\"ChatMessage_chatMessages__jVZHf\",\"senderInfo\":\"ChatMessage_senderInfo__3izU8\",\"circleAvatar\":\"ChatMessage_circleAvatar__11WXq\",\"messageTime\":\"ChatMessage_messageTime__2pMIz\"};","import s from './Chats.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Chats = (props) => {\r\n    return (\r\n        <NavLink to={`/dialogs/${props.id}`}>\r\n            <div className={s.chat}>\r\n                <div className={s.chatPhoto}>\r\n                    <img src={props.avatar} className={s.circleAvatar}></img>\r\n                </div>\r\n                <div className={s.getMessage}>\r\n                    <div className={s.messageFrom}>{props.name}</div>\r\n                    <div className={s.lastMessage}>{props.lastMessage}</div>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\n\r\nexport default Chats","import s from './ChatMessage.module.css'\r\n\r\nconst ChatMessage = (props) => {\r\n    return (\r\n        <div className={s.chatMessages}>\r\n            <div className={s.senderInfo}>\r\n                <div>\r\n                    <img alt='chatAvatar' src={props.avatar} className={s.circleAvatar}></img>\r\n                </div>\r\n                <div className={s.message}>{props.message}</div>\r\n            </div>\r\n            <div className={s.messageTime}>{props.messageTime}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChatMessage","import Chats from './Chats/Chats'\r\nimport s from './Dialogs.module.css'\r\nimport ChatMessage from './ChatMessage/ChatMessage'\r\nimport React from \"react\"\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.handleKeyPress()\r\n        }\r\n    }\r\n\r\n    const updateMessageText = (e) => {\r\n        let text = e.target.value\r\n        props.updateMessageText(text)\r\n    }\r\n\r\n    let chatElements =\r\n        state.chatData.map(chat => <Chats id={chat.id} avatar={chat.avatar} name={chat.name} lastMessage={chat.lastMessage} />)\r\n    let messagesElements =\r\n        state.messagesData.map(message => <ChatMessage message={message.message} avatar={message.avatar} messageTime={message.messageTime} />)\r\n\r\n\r\n    return (\r\n        <div className={s.dialogWrapper}>\r\n            <div className={s.selectChat}>\r\n                {chatElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.messagesContainer}>\r\n                    {messagesElements}\r\n                    <div className={s.chatBlock}>\r\n                        <input onChange={updateMessageText} onKeyPress={handleKeyPress} placeholder='Enter a text to send...' className={s.chatInput} type='text' value={state.newMessage.message}></input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className={s.emptyChatMessage}>Select a chat to start messaging...</div> */}\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs","import { connect } from \"react-redux\"\r\nimport { compose } from \"redux\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\r\nimport { addMessageActionCreator, updateMessageTextActionCreator } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleKeyPress: () => { dispatch(addMessageActionCreator()) },\r\n        updateMessageText: (text) => {\r\n            let action = updateMessageTextActionCreator(text)\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)"],"sourceRoot":""}